*nvim-typescript.txt* Typescript development plugin for neovim

*nvim-typescript*


CONTENTS                                                  *typescript-contents*

  1. Intro........................................|typescript-intro|
  2. Install......................................|typescript-install|
  3. Commands.....................................|typescript-commands|
  4. Variables....................................|typescript-variables|
  5. Mappings.....................................|typescript-mappings|
  7. Functions....................................|typescript-functions|
  8. Settings.....................................|typescript-settings|
  9. Troubleshooting..............................|typescript-troubleshooting|

===============================================================================
INTRO                                                        *typescript-intro*

Typescript support for Vim. Nvim-typescript provide standard IDE-like features
like auto-completion, viewing of documentation, type-signature, go to
definition, and reference finder.


===============================================================================
INSTALL                                                    *typescript-install*

To install, use your typical plugin manager and add a reference in your
init.vim. If you'd like completion support, install Deoplete.nvim as well.

*  https://github.com/junegunn/vim-plug >

    Plug 'Shougo/deoplete.nvim'
    Plug 'mhartington/nvim-typescript'
<

*  https://github.com/Shougo/dein.vim >

    call dein#add('Shougo/deoplete.nvim')
    call dein#add('mhartington/nvim-typescript')
<

In you install Deoplete as well, make sure you also have the python3 bindings
to Neovim. >

pip3 install neovim


Then run `UpdateRemotePlugins`.


Currently, a global install of typescript is required. So make sure your have
it installed with >

npm install -g typescript


===============================================================================
COMMANDS                                                  *typescript-commands*

                                                                       *:TSDef*
:TSDef

    Opens the definition file for symbol under the cursor.

                                                                *:TSDefPreview*
:TSDefPreview

    Open the definition file for the symbol under the cursor but in a split
    below.

                                                                      *:TSRefs*
:TSRefs

    Gathers all reference of the symbol under the cursor and displays them in
    a quick-fix window.

                                                                       *:TSDoc*
:TSDoc

    Prints the documentation for the symbol under the cursor and displays it in
    a split.

                                                                     *:TSStart*
:TSStart

    Starts the typescript client. This is called automatically.


                                                                      *:TSStop*
:TSStop

    Stops the typescript client


                                                                   *:TSRestart*
:TSRestart

    Restarts the client. This is useful if changes to the `tsconfig.json` are
    made during the current nvim session.

                                                                      *:TSType*
:TSType

    Prints the type signature for the symbol under the cursor.
                                                                    *:TSRename*
TSRename [word]

    Renames the symbol currently under the cursor. Pass a new name as an arg,
    if no arg is passed, user will be prompted.


                                                                    *:TSImport*
:TSImport

    Tries to import the module in which the symbol under the cursor
    is defined.


                                                                   *:TSTypeDef*
:TSTypeDef

    Goes to the file where the type for the symbol is defined.

                                                                *:TSEditConfig*
:TSEditConfig

    Opens the config file for the current file.

===============================================================================
VARIABLES                                                *typescript-variables*
                                                *g:nvim_typescript#server_path*

g:nvim_typescript#server_path
Values: string
Default: ''./node_modules/.bin/tsserver'

    Set the path of the tsserver. By default, this will be your projects local
    copy in node_modules. If you would like to point this elsewhere, set this
    variable to the path you want. If that path is invalid, it will default to
    the global installed version of typescript


                                      	 *g:nvim_typescript#javascript_support*
g:nvim_typescript#javascript_support
Values: 0 or 1
Default: 0

    Enables javascript support via the typescript client. Requires a
    `jsconfig.json` to be present. If one is not found, a boilerplate one will
    be created in your current working directory.


                                      	 *g:nvim_typescript#vue_support*
g:nvim_typescript#vue_support
Values: 0 or 1
Default: 0

    Enables vue support. If set to 1, the completion will be enabled
    in single-file components with a .vue extension.


                                      *g:nvim_typescript#max_completion_detail*
g:nvim_typescript#max_completion_detail
Values: Any natural number
Default: 25

    If the completion returned by the client exceed this number, the deoplete
    source will return less detail complete. This is for performance reasons.
    This can be bumped up to 100 without any real performance issues, but is
    set to 25 as a safe default.


                                          *g:nvim_typescript#type_info_on_hold*
g:nvim_typescript#type_info_on_hold
Values: 0 or 1
Default: 0

    If set to 1, the type info for the symbol under the cursor will be
    displayed in the echo area.


                                         *g:nvim_typescript#signature_complete*
g:nvim_typescript#signature_complete
Values: 0 or 1
Default: 0

    If set to 1, the function signature will be printed to the echo area. Since
    this plugin integrates with Deoplete, this is disabled in favor of echodoc.
    * https://github.com/Shougo/echodoc.vim


                                                 *g:nvim_typescript#ts_version*
g:nvim_typescript#ts_version

    The current version typescript that is supported by this plugin. Version
    past this may include breaking changes.


                               *g:nvim_typescript#loc_list_item_truncate_after*
g:nvim_typescript#loc_list_item_truncate_after
Values: Any positive natural number or -1
Default: 20

    Defines the length of items displayed in the location window after a call
    to |:TSRefs|.


                                          *g:nvim_typescript#tsimport#template*
g:nvim_typescript#tsimport#template
Values: String
Default: 'import { %s } from ''%s'';'

    Defines the template for import statements. The first '%s' will be replaced
    with the symbol and the second with the symbol module path.

g:nvim_typescript#default_mappings         *g:nvim_typescript#default_mappings*
Values: 0 or 1
Default: 0

    Enable default mappings for select functions.


g:nvim_typescript#completion_mark           *g:nvim_typescript#completion_mark*
Values: String
Default: 'TS'

    Sets the default mark to display during omni-func or deoplete completion.
    Use this vs setting from deoplete.


===============================================================================
MAPPINGS                                                  *typescript-mappings*

There are some mappings set, but are not enabled by default. Set
|g:nvim_typescript#default_mappings| to |1| to enable.

Mapping        Action
-------------  --------------
K              :TSDoc
<leader>tdp    :TSDefPreview
<c-]>          :TSTypeDef


===============================================================================
FUNCTIONS                                                *typescript-functions*


                                                                 *TSOnBufEnter*
TSOnBufEnter

    Function called when a typescript file is opened. This starts the server
    client.

                                                                  *TSOnBufSave*
TSOnBufSave

    Function called when a typescript file is saved. This send a reload event
    to the client, notifying it of changes made to the project.

                                                              *TSGetServerPath*
TSGetServerPath

    Function for checking the path of `tsserver`. By default, we'll use the
    binary in node_modules, but will switch to global when that fails.

===============================================================================
TROUBLESHOOTING                                    *typescript-troubleshooting*


Q: No completions show up on typing.

A: Make sure you have Deoplete installed and have it enabled on startup.

>
  let g:deoplete#enable_at_startup=1
<

Q: I get errors when using this plugin.

A: This could happen for a number of reasons
  1. No valid tsconfig.json in your project
  2. No installation of typescript on your system.
  3. `UpdateRemotePlugins` has not been called since installation.

Q: The plugin does not recognize my file as typescript.

A: This file does not include a syntax file for typescript. I do not want to
   write one. Please install *https://github.com/HerringtonDarkholme/yats.vim*
   or *https://github.com/leafgarland/typescript-vim*

Q: Why better than tsuquyomi? Why is this better than other plugins?

A: This plugin does not claim to be better than any other plugin, and is more
   for my own needs. Maybe you would like it too?
   The plugin is all asynchronous and is lag free. Other plugins are not always
   async or require additional plugins that need to be built. If you are using
   regular Vim, I highly suggest Tsuquyomi, especially with Vim 8.


Q: This breaks with specific version of Typescript.

A: New versions of typescript could contain breaking changes. This is to be
   expected. See the `g:nvim_typescript#ts_version` variable for the  current
   version support.

